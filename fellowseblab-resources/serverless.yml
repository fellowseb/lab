#
# Stack description
# See https://serverless.com/framework/docs/providers/aws/guide/serverless.yml/
#

#
# FellowSeb's lab resources (articles, talks, books)
#
service: fellowseblab-resources

provider:
  name: aws
  runtime: nodejs22.x
  stage: ${opt:stage, 'dev'}
  profile: fellowseb-lab-serverless
  region: eu-west-1
  endpointType: regional
  environment:
    STAGE: ${self:provider.stage}
  deploymentBucket:
    name: fellowseb-lab-${self:provider.stage}-deployment
  versionFunctions: false
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:${self:provider.region}:${self:custom.accountId}:table/fellowseb-lab-${self:provider.stage}-resources/*"
    - Effect: Allow
      Action:
        - dynamodb:BatchWriteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:${self:custom.accountId}:table/fellowseb-lab-${self:provider.stage}-resources"
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:${self:custom.accountId}:table/fellowseb-lab-${self:provider.stage}-resourceTags"
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource: "arn:aws:s3:::fellowseb-lab-${self:provider.stage}/*"
#
# Files excluded from uploaded package
#
package:
  exclude:
    - data/**/*
    - meta/**/*
    - .build/**/*
    - .serverless/**/*
    - test/**/*
    - .dynamodb/**/*

functions:
  #
  # Function: Import resources from my Pocket account
  #
  importFromPocket:
    handler: src/handlers/importFromPocket.handler
    name: fellowseb-lab-${self:provider.stage}-importFromPocket
    description: Import articles, books and talks from a Pocket account
    environment:
      POCKET_CONSUMER_KEY: ${ssm:/fellowseb-lab/POCKET_CONSUMER_KEY}
      POCKET_ACCESS_TOKEN: ${ssm:/fellowseb-lab/POCKET_ACCESS_TOKEN}
      POCKET_FAVORITE: 1
      POCKET_STATE: "archive"
    events:
      - schedule: cron(0 0 * * ? *) # Triggers the event everyday at midnight
      - http:
          path: importFromPocket
          method: get
  #
  # Function: List resource tags
  #
  listResourceTags:
    handler: src/handlers/listResourceTags.handler
    name: fellowseb-lab-${self:provider.stage}-listResourceTags
    description: FellowSeb's lab API, handle /resourcetags GET requests
    events:
      - http:
          path: resourcetags
          method: get
          cors: true
  #
  # Function: List Article resources
  #
  listArticles:
    handler: src/handlers/listArticles.handler
    name: fellowseb-lab-${self:provider.stage}-listArticles
    description: FellowSeb's lab API, handle /articles GET requests
    events:
      - http:
          path: articles
          method: get
          cors: true
  #
  # Function: List Book resources
  #
  listBooks:
    handler: src/handlers/listBooks.handler
    name: fellowseb-lab-${self:provider.stage}-listBooks
    description: FellowSeb's lab API, handle /books GET requests
    events:
      - http:
          path: books
          method: get
          cors: true
  #
  # Function: Get book thumbnail
  #
  getBookThumbnail:
    handler: src/handlers/getBookThumbnail.handler
    name: fellowseb-lab-${self:provider.stage}-getBookThumbnail
    description: FellowSeb's lab API, handle /books/resourceId/thumbnail GET requests
    events:
      - http:
          response:
            contentHandling: CONVERT_TO_BINARY
          path: books/{resourceId}/thumbnail
          method: get
          cors: true

  #
  # Function: List Talk resources
  #
  listTalks:
    handler: src/handlers/listTalks.handler
    name: fellowseb-lab-${self:provider.stage}-listTalks
    description: FellowSeb's lab API, handle /talks GET requests
    events:
      - http:
          path: talks
          method: get
          cors: true
resources:
  Resources:
    #
    # DynamoDB table: resources
    #
    fellowsebLabResourcesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: fellowseb-lab-${self:provider.stage}-resources
        AttributeDefinitions:
          - AttributeName: added_time
            AttributeType: N
          - AttributeName: read_time
            AttributeType: N
          - AttributeName: resourceId
            AttributeType: S
          - AttributeName: resourceType
            AttributeType: S
        KeySchema:
          - AttributeName: resourceId
            KeyType: HASH
          - AttributeName: added_time
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: resourceType-index
            KeySchema:
              - AttributeName: resourceType
                KeyType: HASH
              - AttributeName: read_time
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 1
    #
    # DynamoDB table: resource tags
    #
    fellowsebLabResourceTagsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: fellowseb-lab-${self:provider.stage}-resourceTags
        AttributeDefinitions:
          - AttributeName: tag
            AttributeType: S
        KeySchema:
          - AttributeName: tag
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 3
          WriteCapacityUnits: 1
    fellowsebLabResourcesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: fellowseb-lab-${self:provider.stage}
#
# Plugins for offline dev
#
plugins:
  - serverless-dynamodb-local
  - serverless-apigw-binary
  - serverless-s3-local
  - serverless-offline
  - serverless-stack-output
  - serverless-domain-manager

custom:
  accountId: 414312231171
  output:
    file: .build/stack-${self:provider.stage}.yml
  dynamodb:
    seed:
      resources:
        sources:
          - table: fellowseb-lab-${self:provider.stage}-resources
            sources: [./data/resources.json]
          - table: fellowseb-lab-${self:provider.stage}-resourceTags
            sources: [./data/resourceTags.json]
            dynamodb:
    stages:
      - dev
      - prod
  s3:
    host: localhost
    port: 8001
    directory: ./data/s3
  apigwBinary:
    types:
      - "image/png"
      - "image/webp"
      - "image/gif"
      - "image/x-icon"
      - "application/octet-stream"
      - "image/jpg"
      - "binary/octet-stream"
  domain:
    dev: api-dev.lab.fellowseb.me
    prod: api.lab.fellowseb.me
  customDomain:
    basePath: ""
    createRoute53Record: false
    domainName: ${self:custom.domain.${self:provider.stage}}
    stage: ${self:provider.stage}
    endpointType: "regional"
    enabled: true
